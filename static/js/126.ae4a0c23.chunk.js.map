{"version":3,"file":"static/js/126.ae4a0c23.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Form/ContactForm/ContactForm.module.css?ec73","components/Form/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.filters;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filters) => {\n    return contacts.filter(\n      ({ name }) =>\n        typeof name === 'string' &&\n        name.toLowerCase().includes(filters.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"name-label\":\"Filter_name-label__NcJK-\",\"name-input\":\"Filter_name-input__hnuXu\",\"icon-label\":\"Filter_icon-label__WMIgU\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport * as selectors from '../../redux/contacts/selectors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\n\nimport { useTranslation } from 'react-i18next';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectors.selectFilters);\n  const { t } = useTranslation(); \n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label className={css['name-label']}>\n      <FontAwesomeIcon icon={faFilter} className={css['icon-label']} />\n      {t('filterLabel')}\n      <input\n        className={css['name-input']}\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue || ''}\n        onChange={handleFilterChange}\n        placeholder={t('filterPlaceholder')}\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"contactInfo\":\"ContactList_contactInfo__Sgq6p\",\"contactNum\":\"ContactList_contactNum__gz+mR\",\"name\":\"ContactList_name__UCkFW\",\"nameContainer\":\"ContactList_nameContainer__W2xJE\",\"nameIcon\":\"ContactList_nameIcon__5BSnI\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport * as selectors from '../../redux/contacts/selectors';\nimport { useTranslation } from 'react-i18next';\nimport { Loader } from '../Loader/Loader';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport css from './ContactList.module.css';\n\nconst ContactInfo = ({ name, number }) => (\n  <div className={css.contactInfo}>\n    <div className={css.nameContainer}>\n      <FontAwesomeIcon className={css.nameIcon} icon={faUser} />\n      <span className={css.name}>{name}:</span>\n    </div>\n    <span className={css.contactNum}>{number}</span>\n  </div>\n);\n\nconst ContactListItem = ({ contact, onDelete }) => {\n  const { t } = useTranslation();\n\n  return (\n    <li key={contact.id} className={css.item}>\n      <ContactInfo name={contact.name} number={contact.number} />\n      <button className={css.deleteButton} onClick={() => onDelete(contact)}>\n        <FontAwesomeIcon icon={faTrash} />\n        {t('deleteButton')}\n      </button>\n    </li>\n  );\n};\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectors.selectFilteredContacts);\n  const isLoading = useSelector(selectors.selectLoading);\n  const error = useSelector(selectors.selectError);\n\n  const handleDelete = contact => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <div className={css.error}>{error}</div>}\n\n      <ul className={css.list}>\n        {filteredContacts.map(contact => (\n          <ContactListItem\n            key={contact.id}\n            contact={contact}\n            onDelete={handleDelete}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form-container\":\"ContactForm_form-container__upYT4\",\"button\":\"ContactForm_button__K0dU1\",\"iconBtn\":\"ContactForm_iconBtn__Au6rR\",\"name-label\":\"ContactForm_name-label__akRbL\",\"tel-label\":\"ContactForm_tel-label__PHM4O\",\"name-input\":\"ContactForm_name-input__+CzPc\",\"tel-input\":\"ContactForm_tel-input__BCKkd\",\"label-box\":\"ContactForm_label-box__5wUXz\",\"icon-input\":\"ContactForm_icon-input__TLv06\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\nimport * as selectors from '../../../redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../../Loader/Loader';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPhone, faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport { useTranslation } from 'react-i18next';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const isLoading = useSelector(selectors.selectLoading);\n  const error = useSelector(selectors.selectError);\n  const { t } = useTranslation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.target.elements;\n\n    const newName = name.value;\n    const isExistingContact = contacts.some(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase()\n    );\n\n    if (!isExistingContact) {\n      const newContact = {\n        id: nanoid(),\n        name: newName,\n        number: number.value,\n      };\n\n      dispatch(addContact(newContact));\n\n      Notiflix.Notify.success(t('contactFormSuccessMessage'), {\n        position: 'left-top',\n      });\n    } else {\n      Notiflix.Notify.warning(t('contactFormDuplicateMessage'), {\n        position: 'left-top',\n      });\n    }\n\n    e.target.reset();\n  };\n\n  return (\n    <form className={css['form-container']} onSubmit={handleSubmit}>\n      {isLoading && <Loader />}\n      {error && <div className={css.error}>{error}</div>}\n      <label className={css['name-label']}>\n        <span className={css['label-box']}>\n          <FontAwesomeIcon icon={faUser} className={css['icon-input']} />\n          {t('contactFormName')}\n        </span>\n        <input\n          className={css['name-input']}\n          type=\"text\"\n          name=\"name\"\n          placeholder={t('contactFormNamePlaceholder')}\n          required\n          attern=\"[A-Za-zА-ЯЁа-яёҐґІіЇїЄє\\s]+\"\n          title={t('contactFormNameTitle')}\n        />\n      </label>\n      <label className={css['tel-label']}>\n        <span className={css['label-box']}>\n          <FontAwesomeIcon icon={faPhone} className={css['icon-input']} />\n          {t('contactFormNumber')}\n        </span>\n        <input\n          className={css['tel-input']}\n          type=\"tel\"\n          name=\"number\"\n          placeholder={t('contactFormNumberPlaceholder')}\n          required\n          pattern=\"[0-9\\-]+\"\n          title={t('contactFormNumberTitle')}\n        />\n      </label>\n      <button className={css['button']} type=\"submit\">\n        <FontAwesomeIcon icon={faCheck} className={css['iconBtn']} />\n        {t('contactFormButton')}\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"box\":\"Contacts_box__PikAd\",\"title\":\"Contacts_title__LxdN4\",\"sub-title\":\"Contacts_sub-title__bLLpK\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { useTranslation } from 'react-i18next';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectLoading, selectError } from '../../redux/contacts/selectors';\n\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactForm } from '../../components/Form/ContactForm/ContactForm';\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css['container']}>\n      <h1 className={css['title']}>{t('phonebookTitle')}</h1>\n      <ContactForm />\n      <h2 className={css['sub-title']}>{t('contactsSubtitle')}</h2>\n      {isLoading && !error && <Loader />}\n      <div className={css['box']}>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectLoading","state","contacts","isLoading","selectContacts","items","selectError","error","selectFilters","filters","selectFilteredContacts","createSelector","filter","_ref","name","toLowerCase","includes","Filter","dispatch","useDispatch","filterValue","useSelector","selectors","t","useTranslation","_jsxs","className","css","children","_jsx","FontAwesomeIcon","icon","faFilter","type","value","onChange","event","setFilter","target","placeholder","required","ContactInfo","number","contactInfo","nameContainer","nameIcon","faUser","contactNum","ContactListItem","_ref2","contact","onDelete","item","deleteButton","onClick","faTrash","id","ContactList","filteredContacts","handleDelete","deleteContact","Loader","list","map","ContactForm","onSubmit","e","preventDefault","elements","newName","isExistingContact","some","Notiflix","warning","position","newContact","nanoid","addContact","success","reset","attern","title","faPhone","pattern","faCheck","Contacts","useEffect","fetchContacts"],"sourceRoot":""}