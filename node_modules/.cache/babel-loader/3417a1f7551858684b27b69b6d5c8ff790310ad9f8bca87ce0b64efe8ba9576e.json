{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from '../services/api';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchContacts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchContacts.fulfilled, (state, {\n      payload\n    }) => {\n      state.items = payload;\n      state.isLoading = false;\n    }).addCase(fetchContacts.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    }).addCase(addContact.pending, state => {\n      state.isLoading = true;\n    }).addCase(addContact.fulfilled, (state, {\n      payload\n    }) => {\n      state.items.push(payload);\n      state.isLoading = false;\n    }).addCase(addContact.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    }).addCase(deleteContact.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteContact.fulfilled, (state, {\n      payload\n    }) => {\n      state.items = state.items.filter(contact => contact.id !== payload);\n      state.isLoading = false;\n    }).addCase(deleteContact.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    });\n  }\n});\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchContacts","addContact","deleteContact","contactsSlice","name","initialState","items","isLoading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","push","filter","contact","id","reducer"],"sources":["D:/IT/Reopository/REACT/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchContacts, addContact, deleteContact } from '../services/api';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(fetchContacts.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchContacts.fulfilled, (state, { payload }) => {\r\n        state.items = payload;\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(fetchContacts.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      })\r\n\r\n      .addCase(addContact.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(addContact.fulfilled, (state, { payload }) => {\r\n        state.items.push(payload);\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(addContact.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      })\r\n\r\n      .addCase(deleteContact.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteContact.fulfilled, (state, { payload }) => {\r\n        state.items = state.items.filter(contact => contact.id !== payload);\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(deleteContact.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,iBAAiB;AAE1E,MAAMC,aAAa,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OAAO,CAACZ,aAAa,CAACa,OAAO,EAAEC,KAAK,IAAI;MACvCA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDK,OAAO,CAACZ,aAAa,CAACe,SAAS,EAAE,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACxDF,KAAK,CAACR,KAAK,GAAGU,OAAO;MACrBF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDK,OAAO,CAACZ,aAAa,CAACiB,QAAQ,EAAE,CAACH,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACvDF,KAAK,CAACN,KAAK,GAAGQ,OAAO;MACrBF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CAEDK,OAAO,CAACX,UAAU,CAACY,OAAO,EAAEC,KAAK,IAAI;MACpCA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDK,OAAO,CAACX,UAAU,CAACc,SAAS,EAAE,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACrDF,KAAK,CAACR,KAAK,CAACY,IAAI,CAACF,OAAO,CAAC;MACzBF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDK,OAAO,CAACX,UAAU,CAACgB,QAAQ,EAAE,CAACH,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACpDF,KAAK,CAACN,KAAK,GAAGQ,OAAO;MACrBF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CAEDK,OAAO,CAACV,aAAa,CAACW,OAAO,EAAEC,KAAK,IAAI;MACvCA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDK,OAAO,CAACV,aAAa,CAACa,SAAS,EAAE,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACxDF,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACa,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,OAAO,CAAC;MACnEF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDK,OAAO,CAACV,aAAa,CAACe,QAAQ,EAAE,CAACH,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACvDF,KAAK,CAACN,KAAK,GAAGQ,OAAO;MACrBF,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeJ,aAAa,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}