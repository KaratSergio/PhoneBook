{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nconst contactsSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    contacts: [],\n    filter: ''\n  },\n  reducers: {\n    addContact(state, action) {\n      const newContact = action.payload;\n      const newName = newContact.name;\n      const {\n        contacts\n      } = state;\n      const isExistingContact = contacts.some(_ref => {\n        let {\n          name\n        } = _ref;\n        return name.toLowerCase() === newName.toLowerCase();\n      });\n      if (!isExistingContact) {\n        newContact.id = nanoid();\n        state.contacts.push(newContact);\n      }\n    },\n    deleteContact(state, action) {\n      const idDeleteContact = action.payload;\n      state.contacts = state.contacts.filter(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id !== idDeleteContact;\n      });\n    },\n    setFilter(state, action) {\n      state.filter = action.payload.toLowerCase();\n    }\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  setFilter\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;\nexport default contactsReducer;","map":{"version":3,"names":["createSlice","nanoid","contactsSlice","name","initialState","contacts","filter","reducers","addContact","state","action","newContact","payload","newName","isExistingContact","some","_ref","toLowerCase","id","push","deleteContact","idDeleteContact","_ref2","setFilter","actions","contactsReducer","reducer"],"sources":["D:/IT/Reopository/REACT/goit-react-hw-06-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'phonebook',\r\n  initialState: {\r\n    contacts: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    addContact(state, action) {\r\n      const newContact = action.payload;\r\n      const newName = newContact.name;\r\n      const { contacts } = state;\r\n\r\n      const isExistingContact = contacts.some(\r\n        ({ name }) => name.toLowerCase() === newName.toLowerCase()\r\n      );\r\n\r\n      if (!isExistingContact) {\r\n        newContact.id = nanoid();\r\n        state.contacts.push(newContact);\r\n      }\r\n    },\r\n    deleteContact(state, action) {\r\n      const idDeleteContact = action.payload;\r\n\r\n      state.contacts = state.contacts.filter(\r\n        ({ id }) => id !== idDeleteContact\r\n      );\r\n    },\r\n    setFilter(state, action) {\r\n      state.filter = action.payload.toLowerCase();\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact, setFilter } = contactsSlice.actions;\r\nexport const contactsReducer = contactsSlice.reducer;\r\n\r\nexport default contactsReducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,MAAMC,OAAO,GAAGF,UAAU,CAACR,IAAI;MAC/B,MAAM;QAAEE;MAAS,CAAC,GAAGI,KAAK;MAE1B,MAAMK,iBAAiB,GAAGT,QAAQ,CAACU,IAAI,CACrCC,IAAA;QAAA,IAAC;UAAEb;QAAK,CAAC,GAAAa,IAAA;QAAA,OAAKb,IAAI,CAACc,WAAW,CAAC,CAAC,KAAKJ,OAAO,CAACI,WAAW,CAAC,CAAC;MAAA,CAC5D,CAAC;MAED,IAAI,CAACH,iBAAiB,EAAE;QACtBH,UAAU,CAACO,EAAE,GAAGjB,MAAM,CAAC,CAAC;QACxBQ,KAAK,CAACJ,QAAQ,CAACc,IAAI,CAACR,UAAU,CAAC;MACjC;IACF,CAAC;IACDS,aAAaA,CAACX,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMW,eAAe,GAAGX,MAAM,CAACE,OAAO;MAEtCH,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACC,MAAM,CACpCgB,KAAA;QAAA,IAAC;UAAEJ;QAAG,CAAC,GAAAI,KAAA;QAAA,OAAKJ,EAAE,KAAKG,eAAe;MAAA,CACpC,CAAC;IACH,CAAC;IACDE,SAASA,CAACd,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACE,OAAO,CAACK,WAAW,CAAC,CAAC;IAC7C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,UAAU;EAAEY,aAAa;EAAEG;AAAU,CAAC,GAAGrB,aAAa,CAACsB,OAAO;AAC7E,OAAO,MAAMC,eAAe,GAAGvB,aAAa,CAACwB,OAAO;AAEpD,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}