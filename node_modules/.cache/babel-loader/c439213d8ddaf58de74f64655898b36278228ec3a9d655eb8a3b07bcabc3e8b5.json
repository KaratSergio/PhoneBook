{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport initialState from './initialState';\nimport { fetchContacts, addContact, deleteContact } from './operations';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState.contacts,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch Contacts\n    .addCase(fetchContacts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchContacts.fulfilled, (state, {\n      payload\n    }) => {\n      state.items = payload;\n      state.isLoading = false;\n    }).addCase(fetchContacts.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    })\n    // Add Contact\n    .addCase(addContact.pending, state => {\n      state.isLoading = true;\n    }).addCase(addContact.fulfilled, (state, {\n      payload\n    }) => {\n      state.items.push(payload);\n      state.isLoading = false;\n    }).addCase(addContact.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    })\n    // Delete Contact\n    .addCase(deleteContact.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteContact.fulfilled, (state, {\n      payload\n    }) => {\n      state.items = state.items.filter(contact => contact.id !== payload);\n      state.isLoading = false;\n    }).addCase(deleteContact.rejected, (state, {\n      payload\n    }) => {\n      state.error = payload;\n      state.isLoading = false;\n    });\n  }\n});\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","fetchContacts","addContact","deleteContact","contactsSlice","name","contacts","reducers","extraReducers","builder","addCase","pending","state","isLoading","fulfilled","payload","items","rejected","error","push","filter","contact","id","reducer"],"sources":["D:/IT/Reopository/REACT/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport initialState from './initialState';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: initialState.contacts,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      // Fetch Contacts\r\n      .addCase(fetchContacts.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(fetchContacts.fulfilled, (state, { payload }) => {\r\n        state.items = payload;\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(fetchContacts.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      })\r\n      // Add Contact\r\n      .addCase(addContact.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(addContact.fulfilled, (state, { payload }) => {\r\n        state.items.push(payload);\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(addContact.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      })\r\n      // Delete Contact\r\n      .addCase(deleteContact.pending, state => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteContact.fulfilled, (state, { payload }) => {\r\n        state.items = state.items.filter(contact => contact.id !== payload);\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(deleteContact.rejected, (state, { payload }) => {\r\n        state.error = payload;\r\n        state.isLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAEvE,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,UAAU;EAChBL,YAAY,EAAEA,YAAY,CAACM,QAAQ;EACnCC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA;IACE;IAAA,CACCC,OAAO,CAACT,aAAa,CAACU,OAAO,EAAEC,KAAK,IAAI;MACvCA,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDH,OAAO,CAACT,aAAa,CAACa,SAAS,EAAE,CAACF,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACxDH,KAAK,CAACI,KAAK,GAAGD,OAAO;MACrBH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDH,OAAO,CAACT,aAAa,CAACgB,QAAQ,EAAE,CAACL,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACvDH,KAAK,CAACM,KAAK,GAAGH,OAAO;MACrBH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC;IACD;IAAA,CACCH,OAAO,CAACR,UAAU,CAACS,OAAO,EAAEC,KAAK,IAAI;MACpCA,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDH,OAAO,CAACR,UAAU,CAACY,SAAS,EAAE,CAACF,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACrDH,KAAK,CAACI,KAAK,CAACG,IAAI,CAACJ,OAAO,CAAC;MACzBH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDH,OAAO,CAACR,UAAU,CAACe,QAAQ,EAAE,CAACL,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACpDH,KAAK,CAACM,KAAK,GAAGH,OAAO;MACrBH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC;IACD;IAAA,CACCH,OAAO,CAACP,aAAa,CAACQ,OAAO,EAAEC,KAAK,IAAI;MACvCA,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDH,OAAO,CAACP,aAAa,CAACW,SAAS,EAAE,CAACF,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACxDH,KAAK,CAACI,KAAK,GAAGJ,KAAK,CAACI,KAAK,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKP,OAAO,CAAC;MACnEH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDH,OAAO,CAACP,aAAa,CAACc,QAAQ,EAAE,CAACL,KAAK,EAAE;MAAEG;IAAQ,CAAC,KAAK;MACvDH,KAAK,CAACM,KAAK,GAAGH,OAAO;MACrBH,KAAK,CAACC,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeT,aAAa,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}