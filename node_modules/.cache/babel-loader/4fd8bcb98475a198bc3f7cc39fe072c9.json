{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\Reopository\\\\REACT\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App\\\\App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useMemo, useCallback } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContacts, setFilter as setFilterAction, addContact, deleteContact } from '../../redux/contacts';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport css from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const contacts = _s(useMemo(_s(() => {\n    _s();\n    return useSelector(state => state.phonebook.contacts) || [];\n  }, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  }), []), \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  });\n  const filter = useSelector(state => state.phonebook.filter) || '';\n  const filteredContactsMemo = useMemo(() => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }, [contacts, filter]);\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      dispatch(setContacts(JSON.parse(savedContacts)));\n    }\n  }, [dispatch, contacts]);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  const handleAddContact = useCallback((name, number) => {\n    if (contacts.some(contact => contact.name === name)) {\n      alert('This name is already in the contacts.');\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    dispatch(addContact(newContact));\n  }, [dispatch, contacts]);\n  const handleFilterChange = useCallback(event => {\n    dispatch(setFilterAction(event.target.value));\n  }, [dispatch]);\n  const handleDeleteContact = useCallback(contactId => {\n    dispatch(deleteContact(contactId));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css['container'],\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: css['main-title'],\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      addContact: handleAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css['contacts-title'],\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css['filter-container'],\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContactsMemo,\n        deleteContact: handleDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"2Ty/NOWnF3loejmhMTg4nr4Hzwc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useCallback","nanoid","useDispatch","useSelector","setContacts","setFilter","setFilterAction","addContact","deleteContact","ContactForm","ContactList","Filter","css","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","dispatch","contacts","state","phonebook","filter","filteredContactsMemo","contact","name","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","setItem","stringify","handleAddContact","number","some","alert","newContact","id","handleFilterChange","event","target","value","handleDeleteContact","contactId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["D:/IT/Reopository/REACT/goit-react-hw-06-phonebook/src/components/App/App.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useCallback } from 'react';\r\nimport { nanoid } from 'nanoid'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setContacts,\r\n  setFilter as setFilterAction,\r\n  addContact,\r\n  deleteContact,\r\n} from '../../redux/contacts';\r\n\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nimport css from './App.module.css';\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const contacts = useMemo(() => useSelector(state => state.phonebook.contacts) || [], []);\r\n  const filter = useSelector(state => state.phonebook.filter) || '';\r\n\r\n  const filteredContactsMemo = useMemo(() => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }, [contacts, filter]);\r\n\r\n  useEffect(() => {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n    if (savedContacts) {\r\n      dispatch(setContacts(JSON.parse(savedContacts)));\r\n    }\r\n  }, [dispatch, contacts]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleAddContact = useCallback((name, number) => {\r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      alert('This name is already in the contacts.');\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContact(newContact));\r\n  }, [dispatch, contacts]);\r\n\r\n  const handleFilterChange = useCallback((event) => {\r\n    dispatch(setFilterAction(event.target.value));\r\n  }, [dispatch]);\r\n\r\n  const handleDeleteContact = useCallback((contactId) => {\r\n    dispatch(deleteContact(contactId));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={css['container']}>\r\n      <h1 className={css['main-title']}>Phonebook</h1>\r\n      <ContactForm addContact={handleAddContact} />\r\n\r\n      <h2 className={css['contacts-title']}>Contacts</h2>\r\n      <div className={css['filter-container']}>\r\n        <Filter onChange={handleFilterChange} />\r\n        <ContactList\r\n          contacts={filteredContactsMemo}\r\n          deleteContact={handleDeleteContact}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}